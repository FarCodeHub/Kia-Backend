// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Domain.Entities.reverse;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;

#nullable disable

namespace Domain.Entities.reverse.Configurations
{
    public partial class BaseValueTypeConfiguration : IEntityTypeConfiguration<BaseValueType>
    {
        public void Configure(EntityTypeBuilder<BaseValueType> entity)
        {
            entity.HasIndex(e => e.LevelCode)
                .IsUnique();

            entity.HasIndex(e => e.UniqueName)
                .IsUnique();

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.Property(e => e.GroupName).HasMaxLength(50);

            entity.Property(e => e.LevelCode)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))");

            entity.Property(e => e.ModifiedAt).HasDefaultValueSql("(getdate())");

            entity.Property(e => e.SubSystem).HasMaxLength(50);

            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(50);

            entity.Property(e => e.UniqueName)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.CreatedBy)
                .WithMany(p => p.BaseValueTypeCreatedBies)
                .HasForeignKey(d => d.CreatedById)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BaseValueTypes_Users");

            entity.HasOne(d => d.ModifiedBy)
                .WithMany(p => p.BaseValueTypeModifiedBies)
                .HasForeignKey(d => d.ModifiedById)
                .HasConstraintName("FK_BaseValueTypes_Users1");

            entity.HasOne(d => d.OwnerRole)
                .WithMany(p => p.BaseValueTypes)
                .HasForeignKey(d => d.OwnerRoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_BaseValueTypes_Roles");

            entity.HasOne(d => d.Parent)
                .WithMany(p => p.InverseParent)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK_BaseValueTypes_BaseValueTypes1");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<BaseValueType> entity);
    }
}
