// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Domain.Entities.reverse;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;

#nullable disable

namespace Domain.Entities.reverse.Configurations
{
    public partial class PersonConfiguration : IEntityTypeConfiguration<Person>
    {
        public void Configure(EntityTypeBuilder<Person> entity)
        {
            entity.Property(e => e.Address).HasMaxLength(500);

            entity.Property(e => e.CreatedAt).HasDefaultValueSql("(getdate())");

            entity.Property(e => e.Email).HasMaxLength(320);

            entity.Property(e => e.FatherName).HasMaxLength(50);

            entity.Property(e => e.FirstName).HasMaxLength(50);
            entity.HasIndex(e => e.Id);

            entity.Property(e => e.IdentityCode)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.Property(e => e.LastName).HasMaxLength(50);

            entity.Property(e => e.ModifiedAt).HasDefaultValueSql("(getdate())");

            entity.Property(e => e.NationalCode)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.Property(e => e.Phone1)
                .HasMaxLength(30)
                .IsUnicode(false);

            entity.Property(e => e.Phone2)
                .HasMaxLength(30)
                .IsUnicode(false);

            entity.Property(e => e.Phone3)
                .HasMaxLength(30)
                .IsUnicode(false);

            entity.Property(e => e.PostalCode)
                .HasMaxLength(14)
                .IsUnicode(false)
                .IsFixedLength(true);

            entity.Property(e => e.ProfilePhotoUrl).HasMaxLength(1000);

            entity.HasOne(d => d.BirthPlace)
                .WithMany(p => p.PersonBirthPlaces)
                .HasForeignKey(d => d.BirthPlaceId)
                .HasConstraintName("FK_Persons_CountryDivisions1");

            entity.HasOne(d => d.GenderBase)
                .WithMany(p => p.Persons)
                .HasForeignKey(d => d.GenderBaseId)
                .HasConstraintName("FK_Persons_BaseValues");

            entity.HasOne(d => d.OwnerRole)
                .WithMany(p => p.Persons)
                .HasForeignKey(d => d.OwnerRoleId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Persons_Roles");

            entity.HasOne(d => d.ZipCode)
                .WithMany(p => p.PersonZipCodes)
                .HasForeignKey(d => d.ZipCodeId)
                .HasConstraintName("FK_Persons_CountryDivisions");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Person> entity);
    }
}
